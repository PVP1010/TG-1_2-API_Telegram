import asyncio
import requests
from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message
from config import TOKEN, WEATHER_API_KEY  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω –∏–∑ config.py
import random

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã Bot –∏ Dispatcher
bot = Bot(token=TOKEN)
dp = Dispatcher()


# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã
def get_weather(city="–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫"):
    lang = "ru"
    units = "metric"
    url = f"https://api.openweathermap.org/data/2.5/weather?q={city}&appid={WEATHER_API_KEY}&lang={lang}&units={units}"

    try:
        response = requests.get(url)
        data = response.json()

        if response.status_code == 200:
            temp = data["main"]["temp"]
            weather_desc = data["weather"][0]["description"]
            return f"üåç –ì–æ—Ä–æ–¥: {city}\nüå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C\n‚òÅÔ∏è –ü–æ–≥–æ–¥–∞: {weather_desc.capitalize()}"
        else:
            return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
    except Exception as e:
        return f"–û—à–∏–±–∫–∞: {e}"


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /weather
@dp.message(Command("weather"))
async def weather(message: Message):
    weather_info = get_weather()
    await message.answer(weather_info)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(CommandStart())
async def start(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç. –ò—Å–ø–æ–ª—å–∑—É–π /weather, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –¥–ª—è –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫–∞.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@dp.message(Command("help"))
async def help(message: Message):
    await message.answer("–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n/weather - –ü—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã\n/help - –ü–æ–º–æ—â—å" "\n/photo - –†–∞–Ω–¥–æ–º–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /photo (—Ä–∞–Ω–¥–æ–º–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞)
@dp.message(Command("photo"))
async def photo(message: Message):
    images = [
        "https://avatars.mds.yandex.net/i?id=9b513a670ee76376548f34a5c5660345589baf4d-9870356-images-thumbs&n=13",
        "https://avatars.mds.yandex.net/i?id=9c06b52cd440474f4866a3a5cc69d03bf0201fd6-7663084-images-thumbs&n=13",
        "https://avatars.mds.yandex.net/i?id=75c8f5559d1e51bddc7fac372513731b-5250945-images-thumbs&n=13"
    ]
    rand_photo = random.choice(images)
    await message.answer_photo(photo=rand_photo, caption="–≠—Ç–æ —Ä–∞–Ω–¥–æ–º–Ω–∞—è —Ñ–æ—Ç–∫–∞")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥—è—â–∏—Ö —Ñ–æ—Ç–æ
@dp.message(F.photo)
async def react_photo(message: Message):
    responses = ["–û–≥–æ, –∫–∞–∫–∞—è —Ñ–æ—Ç–∫–∞!", "–ù–µ–ø–æ–Ω—è—Ç–Ω–æ, —á—Ç–æ —ç—Ç–æ —Ç–∞–∫–æ–µ", "–ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π –º–Ω–µ —Ç–∞–∫–æ–µ –±–æ–ª—å—à–µ"]
    await message.answer(random.choice(responses))


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())